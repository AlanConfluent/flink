@@ -456,20 +458,10 @@
             boolean allowDataTypeHint) {
         return (extractor, method) -> {
             if (allowDataTypeHint) {
-                final Set<DataTypeHint> dataTypeHints = new HashSet<>();
-                dataTypeHints.addAll(collectAnnotationsOfMethod(DataTypeHint.class, method));
-                dataTypeHints.addAll(
-                        collectAnnotationsOfClass(DataTypeHint.class, extractor.function));
-                if (dataTypeHints.size() > 1) {
-                    throw extractionError(
-                            "More than one data type hint found for output of function. "
-                                    + "Please use a function hint instead.");
-                }
-                if (dataTypeHints.size() == 1) {
-                    return FunctionTemplate.createResultTemplate(
-                            extractor.typeFactory, dataTypeHints.iterator().next());
+                Optional<FunctionResultTemplate> hints = extractHints(extractor, method);
+                if (hints.isPresent()) {
+                    return hints.get();
                 }
-                // otherwise continue with regular extraction
             }
             final DataType dataType =
                     DataTypeExtractor.extractFromGeneric(
